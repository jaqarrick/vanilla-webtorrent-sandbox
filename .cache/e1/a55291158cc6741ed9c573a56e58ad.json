{"id":"node_modules/stream-with-known-length-to-buffer/index.js","dependencies":[{"name":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/package.json","includedInParent":true,"mtime":1604298546895},{"name":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/stream-with-known-length-to-buffer/package.json","includedInParent":true,"mtime":1604298370578},{"name":"once","loc":{"line":2,"column":19},"parent":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/stream-with-known-length-to-buffer/index.js","resolved":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/once/once.js"},{"name":"buffer","parent":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/stream-with-known-length-to-buffer/index.js","resolved":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*! stream-with-known-length-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar once = require('once')\n\nmodule.exports = function getBuffer (stream, length, cb) {\n  cb = once(cb)\n  var buf = Buffer.alloc(length)\n  var offset = 0\n  stream\n    .on('data', function (chunk) {\n      chunk.copy(buf, offset)\n      offset += chunk.length\n    })\n    .on('end', function () { cb(null, buf) })\n    .on('error', cb)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/stream-with-known-length-to-buffer/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}}],"sources":{"node_modules/stream-with-known-length-to-buffer/index.js":"/*! stream-with-known-length-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar once = require('once')\n\nmodule.exports = function getBuffer (stream, length, cb) {\n  cb = once(cb)\n  var buf = Buffer.alloc(length)\n  var offset = 0\n  stream\n    .on('data', function (chunk) {\n      chunk.copy(buf, offset)\n      offset += chunk.length\n    })\n    .on('end', function () { cb(null, buf) })\n    .on('error', cb)\n}\n"},"lineCount":17}},"error":null,"hash":"5e14e73d3ef621de1d89fe569053565f","cacheData":{"env":{}}}