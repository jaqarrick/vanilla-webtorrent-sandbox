{"id":"node_modules/blob-to-buffer/index.js","dependencies":[{"name":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/package.json","includedInParent":true,"mtime":1604298546895},{"name":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/blob-to-buffer/package.json","includedInParent":true,"mtime":1604298370480},{"name":"buffer","parent":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/blob-to-buffer/index.js","resolved":"/Users/johncarrick/Web/current-projects/torrent-project/sanbox/webtorrent-sandbox/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/*! blob-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global Blob, FileReader */\n\nmodule.exports = function blobToBuffer (blob, cb) {\n  if (typeof Blob === 'undefined' || !(blob instanceof Blob)) {\n    throw new Error('first argument must be a Blob')\n  }\n  if (typeof cb !== 'function') {\n    throw new Error('second argument must be a function')\n  }\n\n  const reader = new FileReader()\n\n  function onLoadEnd (e) {\n    reader.removeEventListener('loadend', onLoadEnd, false)\n    if (e.error) cb(e.error)\n    else cb(null, Buffer.from(reader.result))\n  }\n\n  reader.addEventListener('loadend', onLoadEnd, false)\n  reader.readAsArrayBuffer(blob)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/blob-to-buffer/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/blob-to-buffer/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}}],"sources":{"node_modules/blob-to-buffer/index.js":"/*! blob-to-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global Blob, FileReader */\n\nmodule.exports = function blobToBuffer (blob, cb) {\n  if (typeof Blob === 'undefined' || !(blob instanceof Blob)) {\n    throw new Error('first argument must be a Blob')\n  }\n  if (typeof cb !== 'function') {\n    throw new Error('second argument must be a function')\n  }\n\n  const reader = new FileReader()\n\n  function onLoadEnd (e) {\n    reader.removeEventListener('loadend', onLoadEnd, false)\n    if (e.error) cb(e.error)\n    else cb(null, Buffer.from(reader.result))\n  }\n\n  reader.addEventListener('loadend', onLoadEnd, false)\n  reader.readAsArrayBuffer(blob)\n}\n"},"lineCount":24}},"error":null,"hash":"18d3f2be3d8680f5b8c8baaede591d19","cacheData":{"env":{}}}